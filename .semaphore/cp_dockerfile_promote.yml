# This file is managed by ServiceBot plugin - Semaphore. The content in this file is created using a common
# template and configurations in service.yml.
# Any modifications made to ths file will be overwritten by the generated content in nightly runs.
# For more information, please refer to the page:
# https://confluentinc.atlassian.net/wiki/spaces/Foundations/pages/2871296194/Add+SemaphoreCI
version: v1.0
name: build-test-release
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

fail_fast:
  cancel:
    when: "true"

execution_time_limit:
  hours: 1

queue:
  - when: "branch != 'master' and branch !~ '[0-9]+\\.[0-9]+\\.[0-9]+'"
    processing: parallel

global_job_config:
  prologue:
    commands:
      - checkout
      - . vault-setup
      # Semaphore does not accept empty values for parameters.
      - if [[ -z "$CONFLUENT_VERSION" ]]; then echo "Must specify CONFLUENT_VERSION" && exit 1; fi
      - if [[ -z "$IMAGE_REVISION" ]]; then echo "Must specify IMAGE_REVISION" && exit 1; fi
      - if [[ -z "$PROMOTE_OS_TYPE" ]]; then echo "Must specify PROMOTE_OS_TYPE" && exit 1; fi
      - >-
        echo """
        Parameters:
        ==========================
        CONFLUENT_VERSION: $CONFLUENT_VERSION
        IMAGE_REVISION: $IMAGE_REVISION
        UPDATE_LATEST_TAG: $UPDATE_LATEST_TAG
        PACKAGING_BUILD_NUMBER: $PACKAGING_BUILD_NUMBER
        PROMOTE_OS_TYPE: $PROMOTE_OS_TYPE
        """
      - export BRANCH_TAG=$(echo $SEMAPHORE_GIT_BRANCH | tr / -)
      - export DOCKER_PROD_REGISTRY="519856050701.dkr.ecr.us-west-2.amazonaws.com/docker/prod/"
      - export PROMOTED_TAG_PREFIX="$CONFLUENT_VERSION-$IMAGE_REVISION"
      - if [[ ! "$PACKAGING_BUILD_NUMBER" ]]; then export $PACKAGING_BUILD_NUMBER="latest"; fi
      - docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY
      - export AMD_ARCH=.amd64
      - export ARM_ARCH=.arm64

blocks:
  - name: Promote AMD
    dependencies: []
    task:
      jobs:
        - name: Promote confluentinc/kafka-streams-examples ubi8 AMD
          commands:
            - export OS_TYPE="ubi8"
            - export DOCKER_REPO="confluentinc/kafka-streams-examples"
            - if [[ "$OS_TYPE" =~ "$PROMOTE_OS_TYPE*" || ! "$OS_TYPE" ]]; then export OS_TAG=""; else export OS_TAG="-$OS_TYPE"; fi
            - export INTERNAL_IMAGE_TAG="$BRANCH_TAG-$PACKAGING_BUILD_NUMBER$OS_TAG"
            - export PROMOTED_TAG="$PROMOTED_TAG_PREFIX$OS_TAG$AMD_ARCH"
            - docker pull $DOCKER_PROD_REGISTRY$DOCKER_REPO:$INTERNAL_IMAGE_TAG
            - docker tag $DOCKER_PROD_REGISTRY$DOCKER_REPO:$INTERNAL_IMAGE_TAG $DOCKER_REPO:$PROMOTED_TAG
            - docker run --rm $DOCKER_REPO:$PROMOTED_TAG sh -c "grep staging /etc/yum.repos.d/confluent.repo || grep staging /etc/apt/sources.list" || export STAGING_CHECK_SUCCEED="true"
            - if [[ ! "$STAGING_CHECK_SUCCEED" ]]; then echo "Detected there was a staging repo in image $DOCKER_REPO:$PROMOTED_TAG refusing to promote." && exit 1; fi
            - docker push $DOCKER_REPO:$PROMOTED_TAG
            - >-
              if [[ ! "$OS_TYPE" ]] || [[ "$OS_TYPE" =~ "ubi*" ]]; then
                  export APPLY_TAG=$CONFLUENT_VERSION$AMD_ARCH
                  docker tag $DOCKER_PROD_REGISTRY$DOCKER_REPO:$INTERNAL_IMAGE_TAG $DOCKER_REPO:$APPLY_TAG
                  docker push $DOCKER_REPO:$APPLY_TAG
                  export APPLIED="true"
              fi
            - >-
              if [[ $UPDATE_LATEST_TAG ]]; then
                  if [[ $APPLIED ]]; then
                  docker tag $DOCKER_REPO:$PROMOTED_TAG $DOCKER_REPO:latest$AMD_ARCH
                  docker push $DOCKER_REPO:latest$AMD_ARCH
                  fi
                  docker tag $DOCKER_REPO:$PROMOTED_TAG $DOCKER_REPO:latest-$OS_TYPE$AMD_ARCH
                  docker push $DOCKER_REPO:latest-$OS_TYPE$AMD_ARCH
              fi
  - name: Promote ARM
    dependencies: []
    task:
      jobs:
        - name: Promote confluentinc/kafka-streams-examples ubi8 ARM
          commands:
            - export OS_TYPE="ubi8"
            - export DOCKER_REPO="confluentinc/kafka-streams-examples"
            - if [[ "$OS_TYPE" =~ "$PROMOTE_OS_TYPE*" || ! "$OS_TYPE" ]]; then export OS_TAG=""; else export OS_TAG="-$OS_TYPE"; fi
            - export INTERNAL_IMAGE_TAG="$BRANCH_TAG-$PACKAGING_BUILD_NUMBER$OS_TAG"
            - export PROMOTED_TAG="$PROMOTED_TAG_PREFIX$OS_TAG$ARM_ARCH"
            - docker pull $DOCKER_PROD_REGISTRY$DOCKER_REPO:$INTERNAL_IMAGE_TAG
            - docker tag $DOCKER_PROD_REGISTRY$DOCKER_REPO:$INTERNAL_IMAGE_TAG $DOCKER_REPO:$PROMOTED_TAG
            - docker run --rm $DOCKER_REPO:$PROMOTED_TAG sh -c "grep staging /etc/yum.repos.d/confluent.repo || grep staging /etc/apt/sources.list" || export STAGING_CHECK_SUCCEED="true"
            - if [[ ! "$STAGING_CHECK_SUCCEED" ]]; then echo "Detected there was a staging repo in image $DOCKER_REPO:$PROMOTED_TAG refusing to promote." && exit 1; fi
            - docker push $DOCKER_REPO:$PROMOTED_TAG
            - >-
              if [[ ! "$OS_TYPE" ]] || [[ "$OS_TYPE" =~ "ubi*" ]]; then
                  export APPLY_TAG=$CONFLUENT_VERSION$ARM_ARCH
                  docker tag $DOCKER_PROD_REGISTRY$DOCKER_REPO:$INTERNAL_IMAGE_TAG $DOCKER_REPO:$APPLY_TAG
                  docker push $DOCKER_REPO:$APPLY_TAG
                  export APPLIED="true"
              fi
            - >-
              if [[ $UPDATE_LATEST_TAG ]]; then
                  if [[ $APPLIED ]]; then
                  docker tag $DOCKER_REPO:$PROMOTED_TAG $DOCKER_REPO:latest$ARM_ARCH
                  docker push $DOCKER_REPO:latest$ARM_ARCH
                  fi
                  docker tag $DOCKER_REPO:$PROMOTED_TAG $DOCKER_REPO:latest-$OS_TYPE$ARM_ARCH
                  docker push $DOCKER_REPO:latest-$OS_TYPE$ARM_ARCH
              fi
  - name: Create Manifest
    dependencies: ["Promote AMD", "Promote ARM"]
    task:
      jobs:
        - name: Create Manifest confluentinc/kafka-streams-examples ubi8
          commands:
            - export OS_TYPE="ubi8"
            - export DOCKER_REPO="confluentinc/kafka-streams-examples"
            - export PROMOTED_TAG="$PROMOTED_TAG_PREFIX$OS_TAG"
            - docker manifest create $DOCKER_REPO:$PROMOTED_TAG $DOCKER_REPO:$PROMOTED_TAG$AMD_ARCH $DOCKER_REPO:$PROMOTED_TAG$ARM_ARCH
            - docker manifest push $DOCKER_REPO:$PROMOTED_TAG
            - >-
              if [[ ! "$OS_TYPE" ]] || [[ "$OS_TYPE" =~ "ubi*" ]]; then
                  docker manifest create $DOCKER_REPO:$CONFLUENT_VERSION $DOCKER_REPO:$CONFLUENT_VERSION$AMD_ARCH $DOCKER_REPO:$CONFLUENT_VERSION$ARM_ARCH
                  docker manifest push $DOCKER_REPO:$CONFLUENT_VERSION
                  export APPLIED="true"
              fi
            - >-
              if [[ $UPDATE_LATEST_TAG ]]; then
                  if [[ $APPLIED ]]; then
                  docker manifest create $DOCKER_REPO:latest $DOCKER_REPO:latest$AMD_ARCH $DOCKER_REPO:latest$ARM_ARCH
                  docker manifest push $DOCKER_REPO:latest
                  fi
                  docker manifest create $DOCKER_REPO:latest-$OS_TYPE $DOCKER_REPO:latest-$OS_TYPE$AMD_ARCH $DOCKER_REPO:latest-$OS_TYPE$ARM_ARCH
                  docker manifest push $DOCKER_REPO:latest-$OS_TYPE
              fi
