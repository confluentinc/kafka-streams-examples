<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.confluent</groupId>
        <artifactId>common</artifactId>
        <version>3.3.0</version>
    </parent>

    <groupId>io.confluent</groupId>
    <artifactId>kafka-streams-examples</artifactId>
    <packaging>jar</packaging>

    <organization>
        <name>Confluent, Inc.</name>
        <url>http://confluent.io</url>
    </organization>
    <url>http://confluent.io</url>
    <description>
        Kafka Streams examples
    </description>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>confluent</id>
            <url>http://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

    <properties>
        <algebird.version>0.13.0</algebird.version>
        <avro.version>1.8.2</avro.version>
        <chill.version>0.9.2</chill.version>
        <docker.registry></docker.registry>
        <docker.tag>${project.version}</docker.tag>
        <docker.skip>true</docker.skip>
        <dockerfile-maven-plugin.version>1.3.4</dockerfile-maven-plugin.version>
        <exec-maven-plugin.version>1.2.1</exec-maven-plugin.version>
        <java.version>1.8</java.version>
        <jackson.version>2.8.8</jackson.version>
        <jersey.version>2.25</jersey.version>
        <jetty.version>9.2.12.v20150709</jetty.version>
        <licenses.version>3.3.1-SNAPSHOT</licenses.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.version>${kafka.scala.version}.8</scala.version>
        <scalatest.version>2.2.6</scalatest.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-streams-avro-serde</artifactId>
            <version>${confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-avro-serializer</artifactId>
            <version>${confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry-client</artifactId>
            <version>${confluent.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-maven-plugin</artifactId>
            <version>${avro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <!-- This version must be compatible with the Scala version of the Kafka dependency. -->
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <!-- This could be a test-only dependency, but we keep it a compile dependency so that
                 users are able to package the examples via `mvn package` and actually run the examples
                 against a Kafka cluster. -->
            <groupId>com.101tec</groupId>
            <artifactId>zkclient</artifactId>
            <version>0.9</version>
        </dependency>

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
            <version>${jetty.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>algebird-core_${kafka.scala.version}</artifactId>
            <version>${algebird.version}</version>
        </dependency>
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>chill_${kafka.scala.version}</artifactId>
            <version>${chill.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.7.14</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${kafka.scala.version}</artifactId>
            <version>${kafka.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${kafka.scala.version}</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-streams</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-test</artifactId>
            <version>2.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry</artifactId>
            <version>${confluent.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.confluent</groupId>
            <artifactId>kafka-schema-registry</artifactId>
            <version>${confluent.version}</version>
            <!-- Required for e.g. schema registry's RestApp -->
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <!-- The following dependencies on ScalaTest are only required for the Scala tests
             under src/test/scala/.  They are not required for Java code/tests.
        -->
        <dependency>
            <!-- This is a compile-time dependency but included only for scalatest below,
                 so still list it under test dependencies. -->
            <groupId>org.scalactic</groupId>
            <artifactId>scalactic_${kafka.scala.version}</artifactId>
            <version>${scalatest.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
          <artifactId>scalatest_${kafka.scala.version}</artifactId>
          <version>${scalatest.version}</version>
          <scope>test</scope>
      </dependency>
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <scalaCompatVersion>${kafka.scala.version}</scalaCompatVersion>
                        <scalaVersion>${scala.version}</scalaVersion>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!--
                Add Scala sources and tests to project.
                See http://www.mojohaus.org/build-helper-maven-plugin/usage.html
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/test/scala</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- See http://davidb.github.io/scala-maven-plugin/usage.html -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <args>
                        <!--
                           In combination with Scala 2.11, `-Xexperimental` enables SAM
                           for Java 8 lambda support.  Make sure `kafka.scala.version`
                           is set to `2.11`, not `2.10`.
                        -->
                        <arg>-Xexperimental</arg>
                        <!-- Emit warning and location for usages of features that should be imported explicitly. -->
                        <arg>-feature</arg>
                        <!-- Emit warning and location for usages of deprecated APIs. -->
                        <arg>-deprecation</arg>
                        <!-- Enable additional warnings where generated code depends on assumptions. -->
                        <arg>-unchecked</arg>
                        <!-- Enable recommended additional warnings. -->
                        <arg>-Xlint</arg>
                        <!-- Warn if an argument list is modified to match the receiver. -->
                        <arg>-Ywarn-adapted-args</arg>
                        <arg>-Ywarn-dead-code</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <inherited>true</inherited>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${avro.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>src/main/resources/avro/io/confluent/examples/streams</sourceDirectory>
                            <outputDirectory>${project.build.directory}/generated-sources</outputDirectory>
                            <stringType>String</stringType>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly/development.xml</descriptor>
                        <descriptor>src/assembly/package.xml</descriptor>
                        <descriptor>src/assembly/standalone.xml</descriptor>
                    </descriptors>
                    <archive>
                        <manifest>
                            <mainClass>io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain</mainClass>
                        </manifest>
                    </archive>
                    <attach>false</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>

            <plugin>
                <!--
                   See https://wiki.jasig.org/display/LIC/maven-notice-plugin
                   In a nutshell: `mvn notice:check` and `mvn notice:generate`
                -->
                <groupId>org.jasig.maven</groupId>
                <artifactId>maven-notice-plugin</artifactId>
                <version>1.0.6.1</version>
                <configuration>
                    <licenseMapping>
                        <param>../license-mappings.xml</param>
                    </licenseMapping>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>create-licenses</id>
                        <configuration>
                            <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                            <arguments>
                                <!-- Note use of development instead of package so we pick up all dependencies.
                                     This assumes both subprojects will be packaged together. -->
                                <argument>-i ${project.build.directory}/${project.build.finalName}-package/share/java/${artifactId}</argument>
                                <argument>-f</argument>
                                <argument>-h ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.artifactId}/licenses.html</argument>
                                <argument>-l ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.artifactId}/licenses</argument>
                                <argument>-n ${project.build.directory}/${project.build.finalName}-package/share/doc/${project.artifactId}/notices</argument>
                                <argument>-x licenses-${project.version}.jar</argument>
                            </arguments>
                        </configuration>
                        <phase>package</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeProjectDependencies>true</includeProjectDependencies>
                    <includePluginDependencies>true</includePluginDependencies>
                    <executableDependency>
                        <groupId>io.confluent</groupId>
                        <artifactId>licenses</artifactId>
                    </executableDependency>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>io.confluent</groupId>
                        <artifactId>licenses</artifactId>
                        <version>${licenses.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <buildArgs>
                                <ARTIFACT_ID>${project.artifactId}</ARTIFACT_ID>
                                <STREAMS_VERSION>${project.version}</STREAMS_VERSION>
                                <DOCKER_REGISTRY>${docker.registry}</DOCKER_REGISTRY>
                            </buildArgs>
                            <tag>${docker.tag}</tag>
                            <repository>${docker.registry}confluentinc/${project.artifactId}</repository>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>
